{"mappings":"ACGA,SAAS,gBAAgB,CAAC,mBAAoB,WAWnC,IAAA,EAAT,SAA2B,CAAW,EACpC,IAAM,EAAa,EAAK,KAAK,GAAG,IAAI,CAAC,SAAC,CAAA,CAAM,CAA5C,EACE,IAAM,EAAQ,EAAK,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,GAChD,EAAQ,EAAK,KAAK,CAAC,EAAY,CAAC,WAAW,CAAC,IAAI,UAEtD,AAAI,AAAgB,IAAhB,EACK,SAAS,GAAS,SAAS,GAGhC,AAAgB,IAAhB,EAEA,WAAW,EAAM,OAAO,CAAC,QAAS,KAClC,WAAW,EAAM,OAAO,CAAC,QAAS,KAI/B,EAAM,aAAa,CAAC,EAC7B,GAEM,EAAQ,EAAM,aAAa,CAAC,QAElC,CAAA,EAAM,SAAS,CAAG,GAClB,EAAW,OAAO,CAAC,SAAC,CAApB,EAA4B,OAAA,EAAM,WAAW,CAAC,E,EAChD,EAjCM,EAAQ,SAAS,aAAa,CAAC,SAC/B,EAAU,EAAM,gBAAgB,CAAC,MACjC,EAAO,MAAM,IAAI,CAAC,EAAM,gBAAgB,CAAC,aAE/C,EAAQ,OAAO,CAAC,SAAC,CAAA,CAAQ,CAAzB,EACE,EAAO,gBAAgB,CAAC,QAAS,WAC/B,EAAkB,EACpB,EACF,EA0BF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\n// write code here\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var sortTableByColumn = function sortTableByColumn(columnIndex) {\n        var sortedRows = rows.slice().sort(function(rowA, rowB) {\n            var cellA = rowA.cells[columnIndex].textContent.trim();\n            var cellB = rowB.cells[columnIndex].textContent.trim();\n            if (columnIndex === 2) return parseInt(cellA) - parseInt(cellB);\n            if (columnIndex === 3) return parseFloat(cellA.replace(/[$,]/g, \"\")) - parseFloat(cellB.replace(/[$,]/g, \"\"));\n            return cellA.localeCompare(cellB);\n        });\n        var tbody = table.querySelector(\"tbody\");\n        tbody.innerHTML = \"\";\n        sortedRows.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    };\n    var table = document.querySelector(\"table\");\n    var headers = table.querySelectorAll(\"th\");\n    var rows = Array.from(table.querySelectorAll(\"tbody tr\"));\n    headers.forEach(function(header, index) {\n        header.addEventListener(\"click\", function() {\n            sortTableByColumn(index);\n        });\n    });\n});\n\n//# sourceMappingURL=index.057485a3.js.map\n","'use strict';\n\n// write code here\ndocument.addEventListener('DOMContentLoaded', () => {\n  const table = document.querySelector('table');\n  const headers = table.querySelectorAll('th');\n  const rows = Array.from(table.querySelectorAll('tbody tr'));\n\n  headers.forEach((header, index) => {\n    header.addEventListener('click', () => {\n      sortTableByColumn(index);\n    });\n  });\n\n  function sortTableByColumn(columnIndex) {\n    const sortedRows = rows.slice().sort((rowA, rowB) => {\n      const cellA = rowA.cells[columnIndex].textContent.trim();\n      const cellB = rowB.cells[columnIndex].textContent.trim();\n\n      if (columnIndex === 2) {\n        return parseInt(cellA) - parseInt(cellB);\n      }\n\n      if (columnIndex === 3) {\n        return (\n          parseFloat(cellA.replace(/[$,]/g, '')) -\n          parseFloat(cellB.replace(/[$,]/g, ''))\n        );\n      }\n\n      return cellA.localeCompare(cellB);\n    });\n\n    const tbody = table.querySelector('tbody');\n\n    tbody.innerHTML = '';\n    sortedRows.forEach((row) => tbody.appendChild(row));\n  }\n});\n"],"names":["document","addEventListener","sortTableByColumn","columnIndex","sortedRows","rows","slice","sort","rowA","rowB","cellA","cells","textContent","trim","cellB","parseInt","parseFloat","replace","localeCompare","tbody","table","querySelector","innerHTML","forEach","row","appendChild","headers","querySelectorAll","Array","from","header","index"],"version":3,"file":"index.057485a3.js.map"}